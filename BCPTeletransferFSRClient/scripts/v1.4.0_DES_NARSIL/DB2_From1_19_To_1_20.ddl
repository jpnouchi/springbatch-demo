ALTER TABLE SPFB_FILES_SYS_MD RENAME COLUMN CREATION_DATE TO FB_CREATION_DATE;
ALTER TABLE SPFB_FILES_SYS_MD RENAME COLUMN LAST_UPDATE   TO FB_LAST_UPDATE;
DROP INDEX SPFB_FILES_MD_IX2;
ALTER TABLE SPFB_FILES_SYS_MD RENAME COLUMN FILE_URL      TO FILE_ACCESS_URL;
ALTER TABLE SPFB_FILES_SYS_MD RENAME COLUMN FILE_URN      TO ABSOLUTE_FILENAME;
ALTER TABLE SPFB_FILES_SYS_MD ALTER  COLUMN FILE_HASH SET DATA TYPE VARCHAR (64);
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN DESCRIPTION          VARCHAR(512);
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN CREATION_DATE        TIMESTAMP;
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN CREATION_DATE_TZ     VARCHAR(6);
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN LAST_UPDATE          TIMESTAMP;
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN LAST_UPDATE_TZ       VARCHAR(6);
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN TOPIC                VARCHAR(1024);
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN ID_FILE_IDENTITY     INTEGER;
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN EOR                  VARCHAR(8);
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN CHARSET              VARCHAR(16);
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN DATA_TYPE            VARCHAR(16);
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN SIDE_DATA            VARCHAR(1024);
ALTER TABLE SPFB_FILES_SYS_MD ADD    COLUMN REC_FORMAT           VARCHAR(16);
REORG TABLE SPFB_FILES_SYS_MD;
CREATE INDEX SPFB_FILES_MD_IX2 ON SPFB_FILES_SYS_MD (FILE_ACCESS_URL ASC);
CREATE INDEX SPFB_FILES_MD_IDX_FBTS ON SPFB_FILES_SYS_MD (FB_LAST_UPDATE) ;
--
CREATE TABLE SPFB_TFILE_SYS_MD (
	ID_ROW BIGINT NOT NULL,
	ID_FILESET BIGINT NOT NULL,
	ID_FILE BIGINT,
	SOURCE_LABEL VARCHAR(256),
	DEST_LABEL VARCHAR(256)
) IN "FB_TS_METADATA";
ALTER TABLE SPFB_TFILE_SYS_MD ADD CONSTRAINT SPFB_TFILE_SYS_MD_PK PRIMARY KEY (ID_ROW);
ALTER TABLE SPFB_TFILE_SYS_MD ADD CONSTRAINT SPFB_TFILE_SYS_MD_FK1 FOREIGN KEY (ID_FILESET) REFERENCES SPFB_FILESET (ID_FILESET) ON DELETE CASCADE;
CREATE INDEX SPFB_TFILE_MD_IX1 ON SPFB_TFILE_SYS_MD (ID_FILESET, ID_FILE ASC);
CREATE SEQUENCE TFILE_SYS_MD_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 20;
--
CREATE TABLE SPFB_FILESET_TRANSACTIONS (
	ID_ROW BIGINT NOT NULL,
	ID_FILESET BIGINT NOT NULL,
	ID_TRANSACTION VARCHAR(128),
	TRANSACTION_DATE TIMESTAMP
) IN "FB_TS_FILESETS";
ALTER TABLE SPFB_FILESET_TRANSACTIONS ADD CONSTRAINT FB_FILESET_TRANSACTIONS_PK PRIMARY KEY (ID_ROW);
CREATE UNIQUE INDEX SPFB_FILESET_TRANSACTIONS_IX1 ON SPFB_FILESET_TRANSACTIONS (ID_TRANSACTION ASC);
CREATE INDEX SPFB_FILESET_TRANSACTIONS_IX2 ON SPFB_FILESET_TRANSACTIONS (TRANSACTION_DATE ASC);
CREATE SEQUENCE FILESET_TRANSACTIONS_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 20;
--
---------------------------
-- Begin of FSEE --
---------------------------
ALTER TABLE SPFB_FILE_INSTANCES ADD CONSTRAINT SPFB_FILE_INSTANCES_FK1 FOREIGN KEY (ID_FILESET) REFERENCES SPFB_FILESET (ID_FILESET) ON DELETE CASCADE;
CREATE INDEX SPFB_FILE_INSTANCES_IDX2 ON SPFB_FILE_INSTANCES (FSEE_UNIQUE_ID);
--
ALTER TABLE SPFB_FILE_IDENTITIES ALTER COLUMN HOST_NAME SET DATA TYPE VARCHAR (60);
CREATE INDEX SPFB_FILE_IDENTITIES_IDX_FNAM ON SPFB_FILE_IDENTITIES (FILE_NAME) ;
REORG TABLE SPFB_FILE_IDENTITIES;
--
ALTER TABLE SPFB_JOB_EXECUTIONS ALTER COLUMN JOB_NAME SET DATA TYPE VARCHAR (32);
ALTER TABLE SPFB_JOB_EXECUTIONS ALTER COLUMN USER_ID  SET DATA TYPE VARCHAR (32);
ALTER TABLE SPFB_JOB_EXECUTIONS ADD   COLUMN JOB_ACCT_INFO          VARCHAR(256);
ALTER TABLE SPFB_JOB_EXECUTIONS ADD   COLUMN JOB_ALL_STND_CPU_TIME  INTEGER;
REORG TABLE SPFB_JOB_EXECUTIONS;
--
ALTER TABLE SPFB_JOB_EXECUTION_STEPS  ALTER COLUMN STEP_NAME SET DATA TYPE VARCHAR (32);
ALTER TABLE SPFB_JOB_EXECUTION_STEPS  ADD   COLUMN PGM_NAME                VARCHAR(256);
ALTER TABLE SPFB_JOB_EXECUTION_STEPS  ADD   COLUMN STEP_ACCT_INFO          VARCHAR(256);
ALTER TABLE SPFB_JOB_EXECUTION_STEPS  ADD   COLUMN STEP_ALL_STND_CPU_TIME  INTEGER;
REORG TABLE SPFB_JOB_EXECUTION_STEPS;
--
---
CREATE TABLE FSEE_ENVIRONMENTS (
  ID_ENVIRONMENT            BIGINT         NOT NULL,
  ENVIRONMENT_TYPE          INTEGER        NOT NULL, -- pk
  HOSTNAME                  VARCHAR(60)    NOT NULL  -- pk
) IN "FB_TS_METADATA";
CREATE SEQUENCE FSEE_ENVIRONMENTS_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 20;
ALTER TABLE FSEE_ENVIRONMENTS APPEND ON;
ALTER TABLE FSEE_ENVIRONMENTS ADD CONSTRAINT FSEE_ENVIRONMENTS_PK PRIMARY KEY (ID_ENVIRONMENT); 
CREATE UNIQUE INDEX FSEE_ENVIRONMENTS_UIDX ON FSEE_ENVIRONMENTS (HOSTNAME , ENVIRONMENT_TYPE);
insert into FSEE_ENVIRONMENTS (ID_ENVIRONMENT,ENVIRONMENT_TYPE,HOSTNAME) values (0,0,'--undefinedHostname--');

CREATE TABLE FSEE_EXECUTIONS (
  ID_EXECUTION              BIGINT         NOT NULL,
  ID_ENVIRONMENT            BIGINT         NOT NULL, -- pk
  START_TIMESTAMP           TIMESTAMP      NOT NULL, -- pk
  EXECUTION_NAME            VARCHAR(60)    NOT NULL, -- pk
  USERNAME                  VARCHAR(60)    
) IN "FB_TS_METADATA";
CREATE SEQUENCE FSEE_EXECUTIONS_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 20;
ALTER TABLE FSEE_EXECUTIONS APPEND ON;
ALTER TABLE FSEE_EXECUTIONS ADD CONSTRAINT FSEE_EXECUTIONS_PK PRIMARY KEY (ID_EXECUTION); 
CREATE UNIQUE INDEX FSEE_EXECUTIONS_UIDX ON FSEE_EXECUTIONS (START_TIMESTAMP, EXECUTION_NAME, ID_ENVIRONMENT) ALLOW REVERSE SCANS;
insert into FSEE_EXECUTIONS (ID_EXECUTION,ID_ENVIRONMENT,START_TIMESTAMP,EXECUTION_NAME) values (0,0,'1900-01-01 00:00:00.000000','--undefinedExecutionName--');

CREATE TABLE FSEE_EXECUTION_STEPS (
  ID_EXECUTION_STEP         BIGINT         NOT NULL,
  ID_EXECUTION              BIGINT         NOT NULL, -- pk
  STEP_NAME                 VARCHAR(60)    NOT NULL  -- pk
) IN "FB_TS_METADATA";
CREATE SEQUENCE FSEE_EXECUTION_STEPS_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 20;
ALTER TABLE FSEE_EXECUTION_STEPS APPEND ON;
ALTER TABLE FSEE_EXECUTION_STEPS ADD CONSTRAINT FSEE_EXECUTIONS_STEP_PK PRIMARY KEY (ID_EXECUTION_STEP); 
CREATE UNIQUE INDEX FSEE_EXECUTION_STEPS_UIDX ON FSEE_EXECUTION_STEPS (ID_EXECUTION, STEP_NAME);
insert into FSEE_EXECUTION_STEPS (ID_EXECUTION_STEP,ID_EXECUTION,STEP_NAME) values (0,0,'--undefinedStepName--');

CREATE TABLE FSEE_FILE_ACTIVITIES (
  ID_FILE_ACTIVITY          BIGINT         NOT NULL,
  ACTIVITY_TYPE             INTEGER        NOT NULL,
  ACTIVITY_STATUS           INTEGER        NOT NULL,
  ACTIVITY_NAME             VARCHAR(60)    ,
  ACTIVITY_KEY              VARCHAR(256)
) IN "FB_TS_METADATA";
CREATE SEQUENCE FSEE_FILE_ACTIVITIES_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 20;
ALTER TABLE FSEE_FILE_ACTIVITIES APPEND ON;
ALTER TABLE FSEE_FILE_ACTIVITIES ADD CONSTRAINT FSEE_FILE_ACTIVITIES_PK PRIMARY KEY (ID_FILE_ACTIVITY); 
CREATE INDEX FSEE_FILE_ACTIVITIES_IDX1 ON FSEE_FILE_ACTIVITIES (ACTIVITY_KEY);

CREATE TABLE FSEE_FILE_ACTIONS_ACTIVITIES (
  ID_FILE_ACTIONS_ACTIVITY  BIGINT         NOT NULL,
  ID_FILE_ACTIVITY          BIGINT         NOT NULL,
  ID_FILE_ACTION_FROM       BIGINT         ,
  ID_FILE_ACTION_TO         BIGINT         
) IN "FB_TS_METADATA";
CREATE SEQUENCE FSEE_FILE_ACTIONS_ACTIVITIES_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 20;
ALTER TABLE FSEE_FILE_ACTIONS_ACTIVITIES APPEND ON;
ALTER TABLE FSEE_FILE_ACTIONS_ACTIVITIES ADD CONSTRAINT FSEE_FILE_ACTIONS_ACTIVITIES_PK PRIMARY KEY (ID_FILE_ACTIONS_ACTIVITY); 
CREATE UNIQUE INDEX FSEE_FILE_ACTIONS_ACTIVITIES_UIDX ON FSEE_FILE_ACTIONS_ACTIVITIES (ID_FILE_ACTIVITY , ID_FILE_ACTION_FROM , ID_FILE_ACTION_TO);

CREATE TABLE FSEE_FILE_ACTIONS (
  ID_FILE_ACTION          BIGINT         NOT NULL,
  ID_FILESET              BIGINT         ,
  ID_FILE_IDENTITY        INTEGER        NOT NULL, -- pk
  ACTION_TIMESTAMP        TIMESTAMP      NOT NULL, -- pk
  ACTION_TYPE             INTEGER        NOT NULL, -- pk
  ID_EXECUTION_STEP       BIGINT         NOT NULL, -- pk
  ID_FILE_ACTIVITY        BIGINT         ,
  INSERT_TIMESTAMP        TIMESTAMP      NOT NULL,
  CORRELATION_TIMESTAMP   TIMESTAMP      ,
  MSG_SEND_TIMESTAMP      TIMESTAMP      ,
  MSG_RECEIVE_TIMESTAMP   TIMESTAMP
)
IN "FB_TS_EVENTSDATA";
CREATE SEQUENCE FSEE_FILE_ACTIONS_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 20;
ALTER TABLE FSEE_FILE_ACTIONS APPEND ON;
ALTER TABLE FSEE_FILE_ACTIONS ADD CONSTRAINT FSEE_FILE_ACTIONS_PK PRIMARY KEY (ID_FILE_ACTION); 
CREATE UNIQUE INDEX FSEE_FILE_ACTIONS_UIDX ON FSEE_FILE_ACTIONS (ID_FILE_IDENTITY , ACTION_TIMESTAMP , ACTION_TYPE , ID_EXECUTION_STEP) ALLOW REVERSE SCANS;
CREATE INDEX FSEE_FILE_ACTIONS_IDX1 ON FSEE_FILE_ACTIONS (ACTION_TIMESTAMP);
CREATE INDEX FSEE_FILE_ACTIONS_IDX2 ON FSEE_FILE_ACTIONS (ID_EXECUTION_STEP);
CREATE INDEX FSEE_FILE_ACTIONS_IDX3 ON FSEE_FILE_ACTIONS (ID_FILESET ASC, ID_FILE_IDENTITY ASC, ACTION_TIMESTAMP ASC) COMPRESS YES ALLOW REVERSE SCANS ;
CREATE INDEX FSEE_FILE_ACTIONS_IDX4 ON FSEE_FILE_ACTIONS (ID_FILE_ACTIVITY);

--
CREATE OR REPLACE FUNCTION FSEE_NAMEOF_ENUM_ACTION_TYPE(ACTION_TYPE INTEGER)
  RETURNS VARCHAR(20)
  DETERMINISTIC 
  NO EXTERNAL ACTION
  BEGIN
    if (ACTION_TYPE = 1) then
      RETURN 'Create';
    end if;
    if (ACTION_TYPE = 10) then
      RETURN 'Update';
    end if;
    if (ACTION_TYPE = 50) then
      RETURN 'Read';
    end if;
    if (ACTION_TYPE = 100) then
      RETURN 'Delete';
    end if;
    RETURN 'UNDEFINED!';
  END;
/

CREATE OR REPLACE FUNCTION FSEE_NAMEOF_ENUM_ACTIVITY_TYPE(ACTIVITY_TYPE INTEGER)
  RETURNS VARCHAR(20)
  DETERMINISTIC 
  NO EXTERNAL ACTION
  BEGIN
    if (ACTIVITY_TYPE is null) then
      RETURN '';
    end if;
    if (ACTIVITY_TYPE = 100) then
      RETURN 'SingleAction';
    end if;
    if (ACTIVITY_TYPE = 101) then
      RETURN 'Copy';
    end if;
    if (ACTIVITY_TYPE = 102) then
      RETURN 'Rename';
    end if;
    if (ACTIVITY_TYPE = 103) then
      RETURN 'Split';
    end if;
    if (ACTIVITY_TYPE = 104) then
      RETURN 'Merge';
    end if;
    if (ACTIVITY_TYPE = 105) then
      RETURN 'Transfer';
    end if;
    if (ACTIVITY_TYPE = 106) then
      RETURN 'Validation';
    end if;
    RETURN 'UNDEFINED!';
  END;
/


CREATE OR REPLACE PROCEDURE EXEC_COMMAND(IN SQL_COMMAND VARCHAR(300))
  LANGUAGE SQL
  BEGIN
    PREPARE S1 from SQL_COMMAND;
    EXECUTE S1;
  END;
/

-- Utility procedure to clean FSEE data

CREATE OR REPLACE VIEW FSEE_FILE_ACTIVITIES_VIEW (
  ID_FILESET                ,
  ID_FILE_ACTIVITY          ,
  ACTIVITY_TYPENAME         ,
  ACTIVITY_STATUS           ,
  ACTIVITY_NAME             ,
  ACTIVITY_START_TIME       ,
  ACTIVITY_END_TIME         
) AS
  SELECT
    FSEE_FILE_ACTIVITIES.ID_FILE_ACTIVITY      ,
    FSEE_FILE_ACTIVITIES.ID_FILE_ACTIVITY      ,
    FSEE_NAMEOF_ENUM_ACTIVITY_TYPE (FSEE_FILE_ACTIVITIES.ACTIVITY_TYPE) ,
    FSEE_FILE_ACTIVITIES.ACTIVITY_STATUS       ,
    FSEE_FILE_ACTIVITIES.ACTIVITY_NAME         ,
    (select min(FSEE_FILE_ACTIONS.ACTION_TIMESTAMP) from FSEE_FILE_ACTIONS where FSEE_FILE_ACTIONS.ID_FILE_ACTIVITY = FSEE_FILE_ACTIVITIES.ID_FILE_ACTIVITY),
    (select max(FSEE_FILE_ACTIONS.ACTION_TIMESTAMP) from FSEE_FILE_ACTIONS where FSEE_FILE_ACTIONS.ID_FILE_ACTIVITY = FSEE_FILE_ACTIVITIES.ID_FILE_ACTIVITY)
  FROM
    FSEE_FILE_ACTIVITIES
;

CREATE OR REPLACE VIEW FSEE_FILE_ACTIONS_JOINEDVIEW (
  ID_FILE_ACTION            ,
  ID_FILE_IDENTITY          ,
  FILE_IDENTITY             ,
  FILE_NAME                 ,
  FILE_HOSTNAME             ,
  CLUSTER_NAME              ,
  PLATFORM                  ,
  ACTION_TS                 ,
  ACTION_TYPE               ,
  ACTION_TYPENAME           ,
  ID_FILE_ACTIVITY          ,
  ID_EXECUTION              ,
  EXECUTION_NAME            ,
  EXECUTION_HOSTNAME        ,
  EXECUTION_USERNAME        ,
  EXECUTION_START_TS        ,
  MSG_SEND_TS               ,
  MSG_RECEIVE_TS            ,
  INSERT_TS                 ,
  CORRELATION_TS            ,
  ID_FILESET                ,
  FSEE_UNIQUE_ID            ,
  FILESET_STATUS            ,
  EXPORT_STATUS             ,
  USAGE_COUNT               
) AS
  SELECT
    FSEE_FILE_ACTIONS.ID_FILE_ACTION            ,
    SPFB_FILE_IDENTITIES.ID_FILE_IDENTITY       ,
    SPFB_FILE_IDENTITIES.FILE_IDENTITY          ,
    SPFB_FILE_IDENTITIES.FILE_NAME              ,
    SPFB_FILE_IDENTITIES.HOST_NAME              ,
    SPFB_FILE_IDENTITIES.CLUSTER_NAME           ,
    SPFB_FILE_IDENTITIES.PLATFORM               ,
    FSEE_FILE_ACTIONS.ACTION_TIMESTAMP          ,
    FSEE_FILE_ACTIONS.ACTION_TYPE               ,
    FSEE_NAMEOF_ENUM_ACTION_TYPE (FSEE_FILE_ACTIONS.ACTION_TYPE) ,
    FSEE_FILE_ACTIONS.ID_FILE_ACTIVITY          ,
    FSEE_EXECUTIONS.ID_EXECUTION                ,
    FSEE_EXECUTIONS.EXECUTION_NAME              ,
    FSEE_ENVIRONMENTS.HOSTNAME                  ,
    FSEE_EXECUTIONS.USERNAME                    ,
    decode (FSEE_EXECUTIONS.ID_EXECUTION, 0, null, FSEE_EXECUTIONS.ID_EXECUTION, FSEE_EXECUTIONS.START_TIMESTAMP),
    FSEE_FILE_ACTIONS.MSG_SEND_TIMESTAMP        ,
    FSEE_FILE_ACTIONS.MSG_RECEIVE_TIMESTAMP     ,
    FSEE_FILE_ACTIONS.INSERT_TIMESTAMP          ,
    FSEE_FILE_ACTIONS.CORRELATION_TIMESTAMP     ,
    SPFB_FILE_INSTANCES.ID_FILESET              ,
    SPFB_FILE_INSTANCES.FSEE_UNIQUE_ID          ,
    SPFB_FILE_INSTANCES.FILESET_STATUS          ,
    SPFB_FILE_INSTANCES.EXPORT_STATUS           ,
    SPFB_FILE_INSTANCES.USAGE_COUNT             
  FROM
    FSEE_FILE_ACTIONS       ,
    SPFB_FILE_IDENTITIES    ,
    FSEE_EXECUTION_STEPS    ,
    FSEE_EXECUTIONS         ,
    FSEE_ENVIRONMENTS       ,
    SPFB_FILE_INSTANCES     
  WHERE
    FSEE_FILE_ACTIONS.ID_FILE_IDENTITY       = SPFB_FILE_IDENTITIES.ID_FILE_IDENTITY
    AND FSEE_FILE_ACTIONS.ID_EXECUTION_STEP  = FSEE_EXECUTION_STEPS.ID_EXECUTION_STEP 
    AND FSEE_EXECUTION_STEPS.ID_EXECUTION    = FSEE_EXECUTIONS.ID_EXECUTION
    AND FSEE_EXECUTIONS.ID_ENVIRONMENT       = FSEE_ENVIRONMENTS.ID_ENVIRONMENT
    AND SPFB_FILE_INSTANCES.ID_FILESET       = FSEE_FILE_ACTIONS.ID_FILESET
;

CREATE OR REPLACE VIEW FSEE_FILE_ACTIONS_VIEW (
  ID_FILE_ACTION            ,
  ID_FILE_IDENTITY          ,
  FILE_IDENTITY             ,
  FILE_NAME                 ,
  FILE_HOSTNAME             ,
  CLUSTER_NAME              ,
  PLATFORM                  ,
  ACTION_TS                 ,
  ACTION_TYPE               ,
  ACTION_TYPENAME           ,
  ID_FILE_ACTIVITY          ,
  ID_EXECUTION              ,
  EXECUTION_NAME            ,
  EXECUTION_HOSTNAME        ,
  EXECUTION_USERNAME        ,
  EXECUTION_START_TS        ,
  MSG_SEND_TS               ,
  MSG_RECEIVE_TS            ,
  INSERT_TS                 ,
  CORRELATION_TS            ,
  ID_FILESET                ,
  FSEE_UNIQUE_ID            ,
  FILESET_STATUS            ,
  EXPORT_STATUS             ,
  USAGE_COUNT               ,
  ACTIVITY_NAME             ,
  ACTIVITY_TYPE             ,
  ACTIVITY_TYPENAME         ,
  ACTIVITY_STATUS           
) AS
  SELECT
    ID_FILE_ACTION            ,
    ID_FILE_IDENTITY          ,
    FILE_IDENTITY             ,
    FILE_NAME                 ,
    FILE_HOSTNAME             ,
    CLUSTER_NAME              ,
    PLATFORM                  ,
    ACTION_TS                 ,
    ACTION_TYPE               ,
    ACTION_TYPENAME           ,
    FSEE_FILE_ACTIVITIES.ID_FILE_ACTIVITY       ,
    ID_EXECUTION              ,
    EXECUTION_NAME            ,
    EXECUTION_HOSTNAME        ,
    EXECUTION_USERNAME        ,
    EXECUTION_START_TS        ,
    MSG_SEND_TS               ,
    MSG_RECEIVE_TS            ,
    INSERT_TS                 ,
    CORRELATION_TS            ,
    ID_FILESET                ,
    FSEE_UNIQUE_ID            ,
    FILESET_STATUS            ,
    EXPORT_STATUS             ,
    USAGE_COUNT               ,
    FSEE_FILE_ACTIVITIES.ACTIVITY_NAME          ,
    FSEE_FILE_ACTIVITIES.ACTIVITY_TYPE          ,
    FSEE_NAMEOF_ENUM_ACTIVITY_TYPE (FSEE_FILE_ACTIVITIES.ACTIVITY_TYPE) ,
    FSEE_FILE_ACTIVITIES.ACTIVITY_STATUS       
  FROM
    FSEE_FILE_ACTIONS_JOINEDVIEW
    LEFT OUTER JOIN FSEE_FILE_ACTIVITIES
      ON FSEE_FILE_ACTIONS_JOINEDVIEW.ID_FILE_ACTIVITY = FSEE_FILE_ACTIVITIES.ID_FILE_ACTIVITY
;

CREATE OR REPLACE VIEW FTEE_ACTIVITIES_VIEW (
  ID_ROW                     ,
  ID_FILESET                 ,
  ID_FILE_ACTIVITY           ,
  ACTIVITY_TYPENAME          ,
  ACTIVITY_STATUS            ,
  ACTIVITY_NAME              ,
  ACTIVITY_START_TIME        ,
  ACTIVITY_END_TIME          
) AS
select
  ID_FILE_ACTIVITY           ,
  ID_FILE_ACTIVITY           ,
  ID_FILE_ACTIVITY           ,
  ACTIVITY_TYPENAME          ,
  ACTIVITY_STATUS            ,
  ACTIVITY_NAME              ,
  ACTIVITY_START_TIME        ,
  ACTIVITY_END_TIME          
from
  FSEE_FILE_ACTIVITIES_VIEW
;
-- 
CREATE OR REPLACE VIEW FTEE_FILE_ACTIVITIES_VIEW (
  ID_ROW                     ,
  ID_FILESET                 ,
  CONTENT_ID                 ,
  FILE_NAME                  ,
  ACTION_TS                  ,
  ID_FILE_ACTIVITY           ,
  ACTIVITY_NAME              ,
  ACTIVITY_STATUS            ,
  VERSUS                     ,
  USERNAME                   
) AS
select
  ID_FILE_ACTION        ,
  ID_FILESET            ,
  FSEE_UNIQUE_ID        ,
  FILE_NAME             ,
  ACTION_TS             ,
  ID_FILE_ACTIVITY      ,
  ACTIVITY_NAME         ,
  ACTIVITY_STATUS       ,
  decode(ID_FILE_ACTIVITY, null, null, (select min(ID_FILE_ACTIVITY) from FSEE_FILE_ACTIONS_ACTIVITIES where FSEE_FILE_ACTIONS_ACTIVITIES.ID_FILE_ACTION_FROM = FSEE_FILE_ACTIONS_VIEW.ID_FILE_ACTION), 'INPUT', (select min(ID_FILE_ACTIVITY) from FSEE_FILE_ACTIONS_ACTIVITIES where FSEE_FILE_ACTIONS_ACTIVITIES.ID_FILE_ACTION_TO = FSEE_FILE_ACTIONS_VIEW.ID_FILE_ACTION), 'OUTPUT', ID_FILE_ACTIVITY , 'N/A' ),
  EXECUTION_USERNAME
from
  FSEE_FILE_ACTIONS_VIEW
;


-- following VIEW is becoming deprecated .
CREATE OR REPLACE VIEW FSEE_FILE_EVENTS_VIEW (
  ID_FILE_EVENT             ,
  ID_FILE_IDENTITY          ,
  FILE_IDENTITY             ,
  FILE_NAME                 ,
  HOST_NAME                 ,
  CLUSTER_NAME              ,
  PLATFORM                  ,
  OPER_TIMESTAMP            ,
  OPERATION_TYPE            ,
  OPER_HOST_NAME            ,
  ID_FILE_EVENT_RENAME      ,
  ID_JOB_EXECUTION          ,
  JOB_NAME                  ,
  SYSTEM_ID                 ,
  JES2_JOB_ID               ,
  JOB_TIMESTAMP_ID          ,
  JOB_ABEND_CODE            ,
  JOB_CONDITION_CODE        ,
  JOB_COMPLETION_CODE       ,
  STEP_NAME                 ,
  USER_ID                   ,
  PGM_NAME                  ,
  STEP_ABEND_CODE           ,
  STEP_CONDITION_CODE       ,
  STEP_COMPLETION_CODE      ,
  OPEN_TYPE                 ,
  OPEN_DISP                 ,
  DD_NAME                   ,
  MEMBER_NAME               ,
  FILE_ORG                  ,
  FILE_RECFM                ,
  FILE_SIZE                 ,
  TRANSFER_ID               ,
  FLOW_INSTANCE_ID          ,
  PARENT_ID                 ,
  PROCESS_ID                ,
  THREAD_ID                 ,
  MSG_SEND_TIMESTAMP        ,
  MSG_RECEIVE_TIMESTAMP     ,
  INSERT_TIMESTAMP          ,
  CORRELATION_TIMESTAMP     ,
  ID_FILE_EVENTS_SET        ,
  ID_FILE_EVENT_BEGIN       ,
  ID_FILE_EVENT_END         ,
  ID_FILESET                ,
  FSEE_UNIQUE_ID            ,
  FILESET_STATUS            ,
  EXPORT_STATUS             ,
  USAGE_COUNT               ,
  RENAME_COUNT
) AS
  SELECT
    B.ID_FILE_EVENT         ,
    A.ID_FILE_IDENTITY      ,
    A.FILE_IDENTITY         ,
    A.FILE_NAME             ,
    A.HOST_NAME             ,
    A.CLUSTER_NAME          ,
    A.PLATFORM              ,
    B.OPER_TIMESTAMP        ,
    B.OPERATION_TYPE        ,
    B.OPER_HOST_NAME        ,
    B.ID_FILE_EVENT_RENAME  ,
    E.ID_JOB_EXECUTION      ,
    E.JOB_NAME              ,
    E.SYSTEM_ID             ,
    E.JES2_JOB_ID           ,
    decode (E.ID_JOB_EXECUTION, 0, null, E.ID_JOB_EXECUTION, E.JOB_TIMESTAMP_ID),
    E.JOB_ABEND_CODE        ,
    E.JOB_CONDITION_CODE    ,
    E.JOB_COMPLETION_CODE   ,
    F.STEP_NAME             ,
    B.USER_ID               ,
    B.PGM_NAME              ,
    F.STEP_ABEND_CODE       ,
    F.STEP_CONDITION_CODE   ,
    F.STEP_COMPLETION_CODE  ,
    B.OPEN_TYPE             ,
    B.OPEN_DISP             ,
    B.DD_NAME               ,
    B.MEMBER_NAME           ,
    B.FILE_ORG              ,
    B.FILE_RECFM            ,
    B.FILE_SIZE             ,
    decode (B.ID_FILE_TRANSFER, null, null, B.ID_FILE_TRANSFER, (select TRANSFER_ID      from SPFB_FILE_TRANSFERS where SPFB_FILE_TRANSFERS.ID_FILE_TRANSFER=B.ID_FILE_TRANSFER)),
    decode (B.ID_FILE_TRANSFER, null, null, B.ID_FILE_TRANSFER, (select FLOW_INSTANCE_ID from SPFB_FILE_TRANSFERS where SPFB_FILE_TRANSFERS.ID_FILE_TRANSFER=B.ID_FILE_TRANSFER)),
    B.PARENT_ID             ,
    B.PROCESS_ID            ,
    B.THREAD_ID             ,
    B.MSG_SEND_TIMESTAMP    ,
    B.MSG_RECEIVE_TIMESTAMP ,
    B.INSERT_TIMESTAMP      ,
    B.CORRELATION_TIMESTAMP ,
    C.ID_FILE_EVENTS_SET    ,
    C.ID_FILE_EVENT_BEGIN   ,
    C.ID_FILE_EVENT_END     ,
    D.ID_FILESET            ,
    D.FSEE_UNIQUE_ID        ,
    D.FILESET_STATUS        ,
    D.EXPORT_STATUS         ,
    D.USAGE_COUNT           ,
    ((select count(*) from SPFB_FILE_EVENTS_SETS where SPFB_FILE_EVENTS_SETS.ID_FILESET = D.ID_FILESET) -1)
    RENAME_COUNT
  FROM
    SPFB_FILE_IDENTITIES        A,
    SPFB_FILE_EVENTS            B,
    SPFB_FILE_EVENTS_SETS       C,
    SPFB_FILE_INSTANCES         D,
    SPFB_JOB_EXECUTIONS         E,
    SPFB_JOB_EXECUTION_STEPS    F
  WHERE
    D.ID_FILESET              = C.ID_FILESET                and
    C.ID_FILE_EVENTS_SET      = B.ID_FILE_EVENTS_SET        and
    B.ID_FILE_IDENTITY        = A.ID_FILE_IDENTITY          and
    B.ID_JOB_EXECUTION_STEP   = F.ID_JOB_EXECUTION_STEP     and
    F.ID_JOB_EXECUTION        = E.ID_JOB_EXECUTION
;
---------------------------
-- End of FSEE --
---------------------------
CREATE OR REPLACE VIEW SPFB_FILES_SYS_METADATA (
  ID_ROW                     ,
  ID_FILESET                 ,
  DESCRIPTION                ,
  CREATION_DATE              ,
  CREATION_DATE_TZ           ,
  LAST_UPDATE                ,
  LAST_UPDATE_TZ             ,
  TOPIC                      ,
  EXTERNAL_ID                ,
  FILE_NAME                  ,
  FILE_URI                   ,
  ABSOLUTE_FILENAME          ,
  FILE_SIZE                  ,
  BLOCK_SIZE                 ,
  REC_LEN                    ,
  EOR                        ,
  CHARSET                    ,
  DATA_TYPE                  ,
  SIDE_DATA                  ,
  REC_FORMAT                 ,
  SOURCE_LABEL               ,
  DEST_LABEL                 
) AS
  SELECT
  A.ID_ROW                   ,
  A.ID_FILESET               ,
  A.DESCRIPTION              ,
  A.CREATION_DATE            ,
  A.CREATION_DATE_TZ         ,
  -- provvisoriamente tolgo questa:
  --         A.LAST_UPDATE              ,
  -- che sostituisco con 
  A.FB_LAST_UPDATE              ,
  A.LAST_UPDATE_TZ           ,
  A.TOPIC                    ,
  A.FILE_HASH                ,
  B.FILE_NAME                ,
  B.FILE_IDENTITY            ,
  A.ABSOLUTE_FILENAME        ,
  A.FILE_SIZE                ,
  A.BLOCK_SIZE               ,
  A.REC_LEN                  ,
  A.EOR                      ,
  A.CHARSET                  ,
  A.DATA_TYPE                ,
  A.SIDE_DATA                ,
  A.REC_FORMAT               ,
  (select SOURCE_LABEL from SPFB_TFILE_SYS_MD where SPFB_TFILE_SYS_MD.ID_FILESET = A.ID_FILESET and SPFB_TFILE_SYS_MD.ID_FILE = A.ID_FILE ),
  (select DEST_LABEL   from SPFB_TFILE_SYS_MD where SPFB_TFILE_SYS_MD.ID_FILESET = A.ID_FILESET and SPFB_TFILE_SYS_MD.ID_FILE = A.ID_FILE )
  FROM
    SPFB_FILES_SYS_MD        A,
    SPFB_FILE_IDENTITIES     B
  WHERE
    A.ID_FILE_IDENTITY    = B.ID_FILE_IDENTITY
;

---------------------------
-- TRACKING SERVER
---------------------------
ALTER TABLE SPFB_TS_EVENT_RECORD ADD   COLUMN JOB_ID          VARCHAR(64);
REORG TABLE SPFB_TS_EVENT_RECORD;
--
DROP TABLE SPFB_TS_DATA_MANAGEMENT_EVENT;
CREATE TABLE SPFB_TS_DATA_MANAGEMENT_EVENT(
	ID_TS_DM_EVENT BIGINT NOT NULL,
	ID_TS_EVENT BIGINT NOT NULL,
	ID_TS_EVENT_RECORD BIGINT NOT NULL,
	DIRECTION BIGINT,
	ENDPOINT VARCHAR(1024),
	FILE VARCHAR(1024),
	INSERT_TIMESTAMP TIMESTAMP
) IN "FB_TS_METADATA";
-- CREATE SEQUENCE SPFB_TS_DATA_MANAGEMENT_EVENT_SEQ AS BIGINT START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 1000;
ALTER TABLE SPFB_TS_DATA_MANAGEMENT_EVENT ADD CONSTRAINT SPFB_TS_DM_EVENT_PK PRIMARY KEY (ID_TS_DM_EVENT); 

ALTER TABLE SPFB_TS_EVENT_RECORD ADD CONSTRAINT SPFB_TS_EVENT_RECORD_FK1 FOREIGN KEY (ID_TS_EVENT) REFERENCES SPFB_TS_EVENT (ID_TS_EVENT) ON DELETE CASCADE;
ALTER TABLE SPFB_TS_CONNECTION_EVENT ADD CONSTRAINT SPFB_TS_CONNECTION_EVENT_FK1 FOREIGN KEY (ID_TS_EVENT) REFERENCES SPFB_TS_EVENT (ID_TS_EVENT) ON DELETE CASCADE;
ALTER TABLE SPFB_TS_CONTROL_EVENT ADD CONSTRAINT SPFB_TS_CONTROL_EVENT_FK1 FOREIGN KEY (ID_TS_EVENT) REFERENCES SPFB_TS_EVENT (ID_TS_EVENT) ON DELETE CASCADE;
ALTER TABLE SPFB_TS_DATA_MANAGEMENT_EVENT ADD CONSTRAINT SPFB_TS_DATA_MANAGEMENT_EVENT_FK1 FOREIGN KEY (ID_TS_EVENT) REFERENCES SPFB_TS_EVENT (ID_TS_EVENT) ON DELETE CASCADE;
ALTER TABLE SPFB_TS_ERROR_EVENT ADD CONSTRAINT SPFB_TS_ERROR_EVENT_FK1 FOREIGN KEY (ID_TS_EVENT) REFERENCES SPFB_TS_EVENT (ID_TS_EVENT) ON DELETE CASCADE;
ALTER TABLE SPFB_TS_PROCESS_EVENT ADD CONSTRAINT SPFB_TS_PROCESS_EVENT_FK1 FOREIGN KEY (ID_TS_EVENT) REFERENCES SPFB_TS_EVENT (ID_TS_EVENT) ON DELETE CASCADE;
ALTER TABLE SPFB_TS_SECURITY_EVENT ADD CONSTRAINT SPFB_TS_SECURITY_EVENT_FK1 FOREIGN KEY (ID_TS_EVENT) REFERENCES SPFB_TS_EVENT (ID_TS_EVENT) ON DELETE CASCADE;
ALTER TABLE SPFB_TS_SPAZIO_MANAGEMENT_EVENT ADD CONSTRAINT SPFB_TS_SPAZIO_MANAGEMENT_EVENT_FK1 FOREIGN KEY (ID_TS_EVENT) REFERENCES SPFB_TS_EVENT (ID_TS_EVENT) ON DELETE CASCADE;
---------------------------
-- DROP FILE
---------------------------
ALTER TABLE SPFB_DROP_FILE_RECIPIENTS_MD ADD COLUMN RECIPIENT_EMAIL_URL VARCHAR(2048);
REORG TABLE SPFB_DROP_FILE_RECIPIENTS_MD;

CREATE TABLE SPFB_DROP_FILE_COMPANIES (
	ID_ROW                BIGINT         NOT NULL,
	ID_FILESET            BIGINT         NOT NULL,
	ID_FILE               BIGINT         ,
	COMPANY_CODE          VARCHAR(8)     NOT NULL,
	COMPANY_NAME          VARCHAR(256)   NOT NULL
)  IN "FB_TS_METADATA";
ALTER TABLE SPFB_DROP_FILE_COMPANIES ADD CONSTRAINT SPFB_DROP_FILE_COMPANIES_PK PRIMARY KEY (ID_ROW);
ALTER TABLE SPFB_DROP_FILE_COMPANIES ADD CONSTRAINT SPFB_DROP_FILE_COMPANIES_FK1 FOREIGN KEY (ID_FILESET) REFERENCES SPFB_FILESET (ID_FILESET) ON DELETE CASCADE;
CREATE INDEX SPFB_DROP_FILE_COMPANIES_IDX1 ON SPFB_DROP_FILE_COMPANIES (ID_FILESET, ID_FILE ASC); 
CREATE UNIQUE INDEX SPFB_DROP_FILE_COMPANIES_UIDX1 ON SPFB_DROP_FILE_COMPANIES (COMPANY_CODE); 
CREATE SEQUENCE SPFB_DROP_FILE_COMPANIES_SEQ AS INTEGER START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 20;
--
CREATE TABLE SPFB_DROP_FILE_USERS (
	ID_ROW                BIGINT         NOT NULL,
	ID_FILESET            BIGINT         NOT NULL,
	ID_FILE               BIGINT         ,
	COMPANY_CODE          VARCHAR(8)     NOT NULL,
	USER_NAME             VARCHAR(256)   NOT NULL,
	USER_EMAIL_ADDRESS    VARCHAR(256)   NOT NULL,
	FIRST_NAME            VARCHAR(256)   ,
	LAST_NAME             VARCHAR(256)   
)  IN "FB_TS_METADATA";
ALTER TABLE SPFB_DROP_FILE_USERS ADD CONSTRAINT SPFB_DROP_FILE_USERS_PK PRIMARY KEY (ID_ROW);
ALTER TABLE SPFB_DROP_FILE_USERS ADD CONSTRAINT SPFB_DROP_FILE_USERS_FK1 FOREIGN KEY (ID_FILESET) REFERENCES SPFB_FILESET (ID_FILESET) ON DELETE CASCADE;
CREATE INDEX SPFB_DROP_FILE_USERS_IX1 ON SPFB_DROP_FILE_USERS (ID_FILESET, ID_FILE ASC); 
CREATE UNIQUE INDEX SPFB_DROP_FILE_USERS_UIDX1 ON SPFB_DROP_FILE_USERS (USER_EMAIL_ADDRESS); 
CREATE UNIQUE INDEX SPFB_DROP_FILE_USERS_UIDX2 ON SPFB_DROP_FILE_USERS (COMPANY_CODE, USER_NAME); 
CREATE SEQUENCE SPFB_DROP_FILE_USERS_SEQ AS INTEGER START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 20;
--
CREATE TABLE SPFB_DROP_FILE_USERS_ADDRESS_BOOK (
	ID_ROW                 BIGINT         NOT NULL,
	ID_FILESET             BIGINT         NOT NULL,
	ID_FILE                BIGINT         ,
	COMPANY_CODE           VARCHAR(8)     NOT NULL,
	USER_NAME              VARCHAR(256)   NOT NULL,
	CONTACT_EMAIL_ADDRESS  VARCHAR(256)   NOT NULL,
	CONTACT_NICKNAME       VARCHAR(256)   
) IN "FB_TS_METADATA";
ALTER TABLE SPFB_DROP_FILE_USERS_ADDRESS_BOOK ADD CONSTRAINT SPFB_DROP_FILE_USERS_ADDRESS_BOOK_PK PRIMARY KEY (ID_ROW);
ALTER TABLE SPFB_DROP_FILE_USERS_ADDRESS_BOOK ADD CONSTRAINT SPFB_DROP_FILE_USERS_ADDRESS_BOOK_FK1 FOREIGN KEY (ID_FILESET) REFERENCES SPFB_FILESET (ID_FILESET) ON DELETE CASCADE;
CREATE INDEX SPFB_DROP_FILE_USERS_ADDRESS_BOOK_IX1 ON SPFB_DROP_FILE_USERS_ADDRESS_BOOK (ID_FILESET, ID_FILE ASC); 
CREATE UNIQUE INDEX SPFB_DROP_FILE_USERS_ADDRESS_BOOK_UIDX1 ON SPFB_DROP_FILE_USERS_ADDRESS_BOOK (COMPANY_CODE, USER_NAME, CONTACT_EMAIL_ADDRESS);
CREATE SEQUENCE SPFB_DROP_FILE_USERS_ADDRESS_BOOK_SEQ AS INTEGER START WITH 1 INCREMENT BY 1 NO MAXVALUE NO CYCLE CACHE 20;

CREATE OR REPLACE VIEW SPFB_DROP_FILE_TRANSFER_MD (
  ID_ROW                ,
  ID_FILESET            ,
  TRANSFER_ID           ,
  SEND_TS               ,
  TRANSFER_STATUS       ,
  PUBLIC_SHARE          ,
  END_DATE              ,
  SENDER_EMAIL          ,
  RECIPIENT_EMAIL       ,
  FILE_NAME             ,
  FILE_URL              ,
  FILE_SIZE             ,
  FILE_END_DATE         ,
  DAYS_LEFT             ,
  DOWNLOAD_COUNT
) 
AS SELECT
  SPFB_DROP_FILE_MD.ID_ROW                   ,
  SPFB_DROP_FILE_MD.ID_FILESET ID_FILESET    , 
  SPFB_DROP_FILE_MD.TRANSFER_ID              ,
  SPFB_DROP_FILE_MD.FB_TIMESTAMP             ,
  SPFB_DROP_FILE_MD.TRANSFER_STATUS          , 
  SPFB_DROP_FILE_MD.PUBLIC_SHARE             , 
  SPFB_DROP_FILE_MD.END_DATE                 , 
  SPFB_DROP_FILE_MD.SENDER_EMAIL             ,
  SPFB_DROP_FILE_FILES_MD.RECIPIENTS_EMAIL   ,
  SPFB_DROP_FILE_FILES_MD.FILE_NAME          ,
  SPFB_DROP_FILE_FILES_MD.FILE_URL           ,
  SPFB_DROP_FILE_FILES_MD.FILE_SIZE          ,
  SPFB_DROP_FILE_FILES_MD.FILE_END_DATE      ,
  timestampdiff(16, SPFB_DROP_FILE_FILES_MD.FILE_END_DATE - current timestamp),
  (select count(*) from SPFB_DROP_FILE_DOWNLOAD_MD where SPFB_DROP_FILE_DOWNLOAD_MD.ID_FILESET = SPFB_DROP_FILE_FILES_MD.ID_FILESET AND SPFB_DROP_FILE_DOWNLOAD_MD.ID_FILE = SPFB_DROP_FILE_FILES_MD.ID_FILE)
FROM SPFB_DROP_FILE_MD LEFT JOIN SPFB_DROP_FILE_FILES_MD ON SPFB_DROP_FILE_MD.ID_FILESET = SPFB_DROP_FILE_FILES_MD.ID_FILESET;

CREATE OR REPLACE VIEW SPFB_DROP_FILE_RECIPIENTS_VIEW (
  ID_ROW                     ,
  ID_FILESET                 ,
  TRANSFER_ID                ,
  SENDER_EMAIL               ,
  RECIPIENT_EMAIL_URL                
) AS
select
  SPFB_DROP_FILE_RECIPIENTS_MD.ID_ROW               ,
  SPFB_DROP_FILE_MD.ID_FILESET                      ,
  SPFB_DROP_FILE_MD.TRANSFER_ID                     ,
  SPFB_DROP_FILE_RECIPIENTS_MD.RECIPIENT_EMAIL      ,
  SPFB_DROP_FILE_RECIPIENTS_MD.RECIPIENT_EMAIL_URL
from
SPFB_DROP_FILE_MD
  LEFT OUTER JOIN
  SPFB_DROP_FILE_RECIPIENTS_MD
    ON SPFB_DROP_FILE_RECIPIENTS_MD.ID_FILESET = SPFB_DROP_FILE_MD.ID_FILESET;

----------------------------------------------------------------------------
-- STORED PROCEDURES --
----------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE INDEX_EXISTS (IN indexName VARCHAR(128), OUT counter INTEGER)
BEGIN
	SELECT COUNT(*) INTO counter FROM SYSCAT.INDEXES WHERE INDNAME = indexName;
END;
/

CREATE OR REPLACE PROCEDURE CLEAN_METADATA_CLASS (IN metadataClassName VARCHAR(256))
------------------------------------------------------------------------
-- SQL Stored Procedure 
------------------------------------------------------------------------
BEGIN
	DELETE FROM SPFB_META_CLASS_STRUCT WHERE ID_METADATA_CLASS IN (SELECT ID_METADATA_CLASS FROM SPFB_META_CLASS where CLASS_NAME = metadataClassName);
	DELETE FROM SPFB_METADATA WHERE NOT EXISTS (SELECT * FROM SPFB_META_CLASS_STRUCT WHERE SPFB_META_CLASS_STRUCT.ID_METADATA = SPFB_METADATA.ID_METADATA);
	DELETE FROM SPFB_META_CLASS WHERE CLASS_NAME = metadataClassName;
END;
/

-- DROP PROCEDURE INCREMENT_COUNTER (INTEGER, BIGINT);

CREATE OR REPLACE PROCEDURE INCREMENT_COUNTER ( IN counterID INTEGER, OUT nextVal BIGINT )
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL Stored Procedure 
------------------------------------------------------------------------
BEGIN
	SELECT LAST_VALUE INTO nextVal FROM SPMFTS_COUNTERS WHERE ID_COUNTER = counterID;
		
	SET nextVal = nextVal + 1;
	
	UPDATE SPMFTS_COUNTERS SET LAST_VALUE = nextVal  WHERE ID_COUNTER = counterID;
END;
/

CREATE OR REPLACE PROCEDURE INSERT_CLASS_IN_DICT (
  IN classId             BIGINT        ,
  IN className           VARCHAR(256)  ,
  IN classType           INTEGER       ,
  IN java_class          VARCHAR(256)  ,
  IN description         VARCHAR(256)  
)
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL Stored Procedure 
------------------------------------------------------------------------
BEGIN
	INSERT INTO SPFB_META_CLASS(ID_METADATA_CLASS, CLASS_NAME, CLASS_TYPE, JAVA_CLASS, DESCRIPTION) VALUES (classId, className, classType, java_class, description);	
END;
/

-- DROP PROCEDURE INSERT_METADATA_IN_DICT (BIGINT, INTEGER, VARCHAR(32), VARCHAR(128), INTEGER, INTEGER);

CREATE OR REPLACE PROCEDURE INSERT_METADATA_IN_DICT (
  IN classId             BIGINT        ,
  IN typeId              INTEGER       ,
  IN metadataName        VARCHAR(32)   ,
  IN description         VARCHAR(128)  ,
  IN fieldLength         INTEGER       ,
  IN fieldPrecision      INTEGER       
)
DYNAMIC RESULT SETS 1
------------------------------------------------------------------------
-- SQL Stored Procedure 
------------------------------------------------------------------------
BEGIN
	DECLARE metadataId BIGINT;
	
	CALL INCREMENT_COUNTER(7, metadataId);
	
	INSERT INTO SPFB_METADATA(ID_METADATA, ID_METADATA_TYPE, METADATA_DESCRIPTION, METADATA_NAME, LENGTH, PRECISION) VALUES (metadataId, typeId, description, metadataName, fieldLength, fieldPrecision);
	INSERT INTO SPFB_META_CLASS_STRUCT (ID_METADATA_CLASS, ID_METADATA, METADATA_ORDER) VALUES(classId, metadataId, 100); 
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_METADATA_DICT
------------------------------------------------------------------------
-- SQL Stored Procedure 
------------------------------------------------------------------------
BEGIN
	DECLARE classId BIGINT;
	
------------------------------------------------------------------------
-- System Metadata Class SPFB_FILES_SYS_METADATA
------------------------------------------------------------------------
	CALL INCREMENT_COUNTER(6, classId);
	CALL INSERT_CLASS_IN_DICT(classId, 'SPFB_FILES_SYS_METADATA', 3, '', 'Filebox Fileset Files System Metadata');

	CALL INSERT_METADATA_IN_DICT(classId, 1, 'DESCRIPTION', 'File description',  512, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 6, 'CREATION_DATE', 'File Creation Date',  0, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'CREATION_DATE_TZ', 'File Creation Date Timezone',  6, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 6, 'LAST_UPDATE', 'File Date of last Update',  0, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'LAST_UPDATE_TZ', 'File Date of last Update Timezone',  6, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'TOPIC', 'File topic',  1024, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'EXTERNAL_ID', 'File content HASH',  40, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'FILE_NAME', 'Original File name',  256, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'FILE_URI', 'File URI',  280, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'ABSOLUTE_FILENAME', 'Original File name in machine format',  256, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 7, 'FILE_SIZE', 'File size',  0, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 2, 'BLOCK_SIZE', 'File block size',  0, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 2, 'REC_LEN', 'File record lenght',  0, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'EOR', 'File End Of Record',  8, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'CHARSET', 'File Character Set',  16, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'DATA_TYPE', 'File Data Type',  16, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'SIDE_DATA', 'File Side Data',  2048, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'REC_FORMAT', 'File rec format',  16, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'SOURCE_LABEL', 'Source Label',  256, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'DEST_LABEL', 'Dest Label',  256, 0);
	
------------------------------------------------------------------------
-- System View Metadata Class FTEE_FILE_ACTIVITIES_VIEW
------------------------------------------------------------------------
	CALL INCREMENT_COUNTER(6, classId);
	CALL INSERT_CLASS_IN_DICT(classId, 'FTEE_FILE_ACTIVITIES_VIEW', 3, '', 'File Transfer E2E File-activities view');
	CALL INSERT_METADATA_IN_DICT(classId,  7,  'CONTENT_ID', 'File Content Id',  0, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  1,  'FILE_NAME', 'File Name', 256, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 10,  'ACTION_TS', 'File Action Timestamp',  0, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  7,  'ID_FILE_ACTIVITY', 'File Activity Id',  0, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  1,  'ACTIVITY_NAME', 'Activity Name',  32, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  2,  'ACTIVITY_STATUS', 'Activity Status',  0, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  1,  'VERSUS', 'Versus',  10, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  1,  'USERNAME', 'Username',  256, 0);
	
------------------------------------------------------------------------
-- System View Metadata Class SPFB_DROP_FILE_TRANSFER_MD
------------------------------------------------------------------------
	CALL INCREMENT_COUNTER(6, classId);
	CALL INSERT_CLASS_IN_DICT(classId, 'SPFB_DROP_FILE_TRANSFER_MD', 3, '', 'Drop File Download Files Metadata');
		
	CALL INSERT_METADATA_IN_DICT(classId,  1, 'TRANSFER_ID', 'Transfer Id', 256, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 10, 'SEND_TS', 'Send timestamp', 0, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  2, 'TRANSFER_STATUS', 'Transfer Status', 4, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  2, 'PUBLIC_SHARE', 'Transfer is Public', 4, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 10, 'END_DATE', 'Transfer End Date', 0, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  1, 'SENDER_EMAIL', 'Transfer Sender e-mail', 256, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  1, 'RECIPIENT_EMAIL', 'Transfer Recipient e-mail', 256, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  1, 'FILE_NAME', 'Transfer Recipient File Name', 256, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  1, 'FILE_URL', 'Transfer Recipient File Url', 2048, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  7, 'FILE_SIZE', 'Transfer Recipient File Size', 8, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 10, 'FILE_END_DATE', 'Transfer Recipient End Date Ts', 8, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  2, 'DAYS_LEFT', 'Transfer Recipient Left Before End', 4, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  2, 'DOWNLOAD_COUNT', 'Transfer Status', 4, 0);
	
------------------------------------------------------------------------
-- System View Metadata Class SPFB_DROP_FILE_RECIPIENTS_VIEW
------------------------------------------------------------------------
	CALL INCREMENT_COUNTER(6, classId);
	
	CALL INSERT_CLASS_IN_DICT(classId, 'SPFB_DROP_FILE_RECIPIENTS_VIEW', 3, '', 'Drop File Recipient Metadata');
	CALL INSERT_METADATA_IN_DICT(classId,  1, 'TRANSFER_ID', 'Transfer Id', 256, 0);                
	CALL INSERT_METADATA_IN_DICT(classId,  1, 'SENDER_EMAIL', 'Sender e-mail', 256, 0);
	CALL INSERT_METADATA_IN_DICT(classId,  1, 'RECIPIENT_EMAIL_URL', 'Recipient e-mail url', 2048, 0);

------------------------------------------------------------------------
-- System Metadata Class SPFB_DROP_FILE_USERS
------------------------------------------------------------------------
	CALL INCREMENT_COUNTER(6, classId);
	CALL INSERT_CLASS_IN_DICT(classId, 'SPFB_DROP_FILE_USERS', 2, 'com.primeur.spmfts.db.jpa.SpfbDropFileUsers', 'Drop File Users Metadata');
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'COMPANY_CODE'          , 'Company Code'       ,   8, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'USER_NAME'             , 'Username'             , 256, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'USER_EMAIL_ADDRESS'    , 'User EMail address'   , 256, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'FIRST_NAME'            , 'First Name'           , 256, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'LAST_NAME'             , 'Last Name'            , 256, 0);
	
------------------------------------------------------------------------
-- System Metadata Class SPFB_DROP_FILE_USERS_ADDRESS_BOOK
------------------------------------------------------------------------
	CALL INCREMENT_COUNTER(6, classId);
	CALL INSERT_CLASS_IN_DICT(classId, 'SPFB_DROP_FILE_USERS_ADDRESS_BOOK', 2, 'com.primeur.spmfts.db.jpa.SpfbDropFileUsersAddressBook', 'Drop File Users Address Book');
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'COMPANY_CODE'          , 'Company Code'         ,    8, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'USER_NAME'             , 'Username'             ,  256, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'CONTACT_EMAIL_ADDRESS' , 'Contact EMail address' , 256, 0);
	CALL INSERT_METADATA_IN_DICT(classId, 1, 'CONTACT_NICKNAME'      , 'Contact Name'          , 256, 0);
	
END;
/

CALL CLEAN_METADATA_CLASS('FTEE_FILE_ACTIVITIES_VIEW');
CALL CLEAN_METADATA_CLASS('SPFB_DROP_FILE_TRANSFER_MD');
CALL CLEAN_METADATA_CLASS('SPFB_DROP_FILE_USERS');
CALL CLEAN_METADATA_CLASS('SPFB_DROP_FILE_USERS_ADDRESS_BOOK');
COMMIT;
CALL UPDATE_METADATA_DICT;
COMMIT;

DROP PROCEDURE INCREMENT_COUNTER (INTEGER, BIGINT);
DROP PROCEDURE INSERT_CLASS_IN_DICT (BIGINT, VARCHAR(256), INTEGER, VARCHAR(256), VARCHAR(256));
DROP PROCEDURE INSERT_METADATA_IN_DICT (BIGINT, INTEGER, VARCHAR(32), VARCHAR(128), INTEGER, INTEGER);
DROP PROCEDURE UPDATE_METADATA_DICT;
DROP PROCEDURE INDEX_EXISTS;


-- INSERT INTO SPFB_STORAGE_CLASS(ID_STORAGE_CLASS, STORAGE_CLASS_CODE, DESCRIPTION) VALUES (7, 'SPAZIO_ENTERPRISE', 'Storage Class for SPAZIO_ENTERPRISE');
-- INSERT INTO SPFB_STORAGE_VOLS(ID_VOLUME, ID_VOLUME_TYPE, ID_STATE, VOLUME_CODE, DESCRIPTION, VOLUME_URL, VOLUME_FREE_LEVEL) VALUES (7, 5, 1, 'SPAZIO_ENTERPRISE', 'Generic Remote Link Volume', null, 0);
-- INSERT INTO SPFB_STO_CLASS_VOL(ID_STORAGE_CLASS, ID_VOLUME) VALUES (7, 7);
--
-- DELETE from SPFB_USER_CLASSES where USER_CLASS_CODE = 'DROP_FILE';
-- INSERT INTO SPFB_USER_CLASSES(ID_USER_CLASS, USER_CLASS_CODE, DESCRIPTION, CLASS_TYPE, ID_STORAGE_CLASS, EXPIRY_AFTER_PUT, EXPIRY_AFTER_READ, DELETE_MODE, ARCHIVING_OPT, CREATION_DATE, UPDATE_DATE) VALUES (6, 'DROP_FILE', 'User class with files in remote storage', 0, 6, 0, 0, 0, 0, null, null);
-- INSERT INTO SPFB_USER_CLASSES(ID_USER_CLASS, USER_CLASS_CODE, DESCRIPTION, CLASS_TYPE, ID_STORAGE_CLASS, EXPIRY_AFTER_PUT, EXPIRY_AFTER_READ, DELETE_MODE, ARCHIVING_OPT, CREATION_DATE, UPDATE_DATE) VALUES (7, 'SPAZIO_ENTERPRISE', 'User class with files in remote storage', 0, 7, 0, 0, 0, 0, null, null);
--
COMMIT;

DELETE FROM SPMFTS_CONFIGURATION;
--------------------------
-- COMMON CONFIGURATION --
--------------------------
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES (1, 1, 1, 'COMMON', 'cleanSessionsTimerInterval', '300000');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'transactiosCleanTimerOn', '1');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'transactiosCleanTimerInterval', '84000');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'startSipAtStartup', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'dropfileRemindersTimerOn', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'dropFileRemindersTimerInterval', '84000');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'dropFileErrorsSendingTimerOn', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'dropFileErrorsSendingTimerInterval', '600');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'cleanSessionsTimerOn', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'manageRequestsTimerInterval', '300000');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'manageRequestsTimerOn', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'dataBaseVersion', '2.00');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'enableFilesetWithoutFiles', '1');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'insertFilesetDefaultTimeout', '120000');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'cleanInsertFilesetDLQTimerInterval', '300000');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'cleanInsertFilesetDLQOn', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'cleanExpiredFilesetTimerInterval', '3600000');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'cleanExpiredFilesetOn', '1');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'securityEnabled', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'traceLevel', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'processFseeWaitingMsgTimerInterval', '60000');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'processFseeWaitingMsgTimerOn', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'updateConfigFromFileTimerInterval', '120000');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'updateConfigFromFileTimerOn', '1');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'sendHeartBeatEnabled', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'sendHeartBeatTimerOn', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'sendHeartBeatTimerInterval', '0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON','sendHeartBeatHostName','localhost');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON','sendHeartBeatPort','61616');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON','sendHeartBeatUser',' ');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON','sendHeartBeatPassword',' ');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON','sendHeartBeatQueueName','Filebox.HB');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON','sendHeartBeatDestinationTypeTopic','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'cleanTSEventsTimerInterval', '86400000');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW, ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1, 1, 1, 'COMMON', 'cleanTSEventsTimerOn', '1');

-------------------------
-- ADHOC CONFIGURATION --
-------------------------
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,2,1,'COMMON','enableSendMessagesToB2B','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,2,1,'COMMON','configForB2BCommunication','AMQB2BCommunicator');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,2,1,'AMQB2BCommunicator','hostName','localhost');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,2,1,'AMQB2BCommunicator','port','7222');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,2,1,'AMQB2BCommunicator','user',' ');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,2,1,'AMQB2BCommunicator','sendQueueName','FSEE.BAM');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,2,1,'AMQB2BCommunicator','destinationTypeTopic','0');

------------------------
-- FSEE CONFIGURATION --
------------------------
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'COMMON','fseeNumCorrelators','6');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'COMMON','fseeNumRetentionDaysDeletedFileset','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'COMMON','enableSendMessagesToBam','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'COMMON','configForBamCommunication','AMQBamCommunicator');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'COMMON','enableSendMessagesToCutoff','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'COMMON','configForCutoffCommunication','AMQCutoffComminicator');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'COMMON','enableUsageConuntFromConfig','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'COMMON','checkEventAlreadyExist','1');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'COMMON','runThreadsByFile','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'COMMON','eventsQueuesInMemory','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE)
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'spsa','platform','unix');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'spsa','AppType','2');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'spsa','openUsageCount','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'filetacq','platform','unix');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'filetacq','AppType','2');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'filetacq','openUsageCount','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'filetdsp','platform','unix');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'filetdsp','AppType','1');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'filetdsp','openUsageCount','1');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'SDFUROU','platform','MVS');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'SDFUROU','AppType','1');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'SDFUROU','openUsageCount','1');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'SDFUACQ','platform','MVS');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'SDFUACQ','AppType','2');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'SDFUACQ','openUsageCount','1');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'WMQBamCommunicator','hostName','192.168.7.186');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'WMQBamCommunicator','channel','SYSTEM.DEF.SVRCONN');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'WMQBamCommunicator','port','1415');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'WMQBamCommunicator','queueManagerName','QM.DOBLONIG');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'WMQBamCommunicator','sendQueueName','FILEBOX');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'AMQBamCommunicator','hostName','localhost');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'AMQBamCommunicator','port','61616');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'AMQBamCommunicator','queueManagerName',' ');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'AMQBamCommunicator','sendQueueName','FSEE.BAM');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'AMQBamCommunicator','destinationTypeTopic','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'TIBCOBamCommunicator','hostName','localhost');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'TIBCOBamCommunicator','port','7222');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'TIBCOBamCommunicator','user',' ');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'TIBCOBamCommunicator','sendQueueName','FSEE.BAM');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'TIBCOBamCommunicator','destinationTypeTopic','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'AMQCutoffComminicator','hostName','localhost');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'AMQCutoffComminicator','port','61616');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'AMQCutoffComminicator','queueManagerName',' ');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'AMQCutoffComminicator','sendQueueName','cutoffNotifyEvents');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,4,1,'AMQCutoffComminicator','destinationTypeTopic','0');
	
-------------------------
-- A3SERVER CONFIGURATION --
-------------------------
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,5,1,'license','file','xxxxxx');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,5,1,'license','pwd','xxxxxx');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,5,1,'connection','url','xxxxxx');

------------------------
-- DROP FILE CONFIGURATION --
------------------------
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,6,1,'COMMON','propertyFile','xxxxxx');

------------------------
-- EVENT CONFIGURATION --
------------------------
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,7,1,'SPFB_SP2_FILE_SYS_MD','fireInsertEvent','0');

------------------------
-- SPAZIO2 SYNC CONFIGURATION --
------------------------
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,8,1,'FILE_URL','buildFileUrl','0');
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,8,1,'FILE_URL','TEST_NODE.spazioHttpUrl','http://adhoc.primeur.com:8080');

------------------------
-- TRACKING SERVER CONFIGURATION --
------------------------
INSERT INTO SPMFTS_CONFIGURATION (ID_ROW,ID_MODULE, ID_SECTION, SECTION_NAME, PROPERTY_NAME, PROPERTY_VALUE) 
	VALUES ((SELECT MAX(ID_ROW) FROM SPMFTS_CONFIGURATION) + 1,9,1,'COMMON','cleanTSEventsDaysToKeep','90');	
	
COMMIT;

UPDATE SPMFTS_CFG_SEC_STRUCT set DEFAULT_VALUE = '84000' where ID_SECTION = 1 and PROP_NAME='dropFileRemindersTimerInterval';
COMMIT;
-- Specific for BCP
CREATE OR REPLACE VIEW SPFB_BCP_SP2_FILE_SYS_MD (
	"ID_ROW",
	"ID_FILESET",
	"NODE_NAME",
	"QUEUE_MANAGER_NAME",
	"QUEUE_NAME",
	"ADDRESS_TYPE",
	"INTERNAL_NUMBER",
	"MESSAGE_FILE_ID",
	"CORRELATION_ID",
	"SENDER",
	"USER_CLASS",
	"DESTINATION_FILENAME",
	"DESCRIPTION",
	"START_PUT_DATE",
	"EXPIRY_DATE",
	"DESTINATION_PATHNAME",
	"ORIGINAL_FILENAME",
	"CODEPAGE",
	"EOR_EOF",
	"PRIORITY",
	"FILE_LENGTH",
	"USER_ID",
	"SESSION_ID",
	"FIRST_READ_DATE",
	"LAST_READ_DATE",
	"ARRIVAL_DATE",
	"BINARY_FILE",
	"Z_COMPRESS",
	"DSTK",
	"LOCALLY_EXTERNAL",
	"DESTINATION_EXTERNAL",
	"ORIGIN_QUEUE_MANAGER",
	"ORIGIN_QUEUE",
	"PRODUCT_CODE",
	"FILE_URL",
	"FILE_STATUS", 
	"VALIDATOR_RECORD_COUNT",
	"COMPANY_CODE"
) 
AS SELECT
	a.ID_ROW "ID_ROW",
	a.ID_FILESET "ID_FILESET",
	a.NODE_NAME "NODE_NAME",
	a.QUEUE_MANAGER_NAME "QUEUE_MANAGER_NAME",
	a.QUEUE_NAME "QUEUE_NAME",
	a.ADDRESS_TYPE "ADDRESS_TYPE",
	a.INTERNAL_NUMBER "INTERNAL_NUMBER",
	a.MESSAGE_FILE_ID "MESSAGE_FILE_ID",
	a.CORRELATION_ID "CORRELATION_ID",
	a.SENDER "SENDER",
	a.USER_CLASS "USER_CLASS",
	a.DESTINATION_FILENAME "DESTINATION_FILENAME",
	a.DESCRIPTION "DESCRIPTION",
	a.START_PUT_DATE "START_PUT_DATE",
	a.EXPIRY_DATE "EXPIRY_DATE",
	a.DESTINATION_PATHNAME "DESTINATION_PATHNAME",
	a.ORIGINAL_FILENAME "ORIGINAL_FILENAME",
	a.CODEPAGE "CODEPAGE",
	a.EOR_EOF "EOR_EOF",
	a.PRIORITY "PRIORITY",
	a.FILE_LENGTH "FILE_LENGTH",
	a.USER_ID "USER_ID",
	a.SESSION_ID "SESSION_ID",
	a.FIRST_READ_DATE "FIRST_READ_DATE",
	a.LAST_READ_DATE "LAST_READ_DATE",
	a.ARRIVAL_DATE "ARRIVAL_DATE",
	a.BINARY_FILE "BINARY_FILE",
	a.Z_COMPRESS "Z_COMPRESS",
	a.DSTK "DSTK",
	a.LOCALLY_EXTERNAL "LOCALLY_EXTERNAL",
	a.DESTINATION_EXTERNAL "DESTINATION_EXTERNAL",
	a.ORIGIN_QUEUE_MANAGER "ORIGIN_QUEUE_MANAGER",
	a.ORIGIN_QUEUE "ORIGIN_QUEUE",
	b.PRODUCT_CODE "PRODUCT_CODE",
	c.FILE_ACCESS_URL "FILE_URL",
	b.FILE_STATUS "FILE_STATUS", 
	b.VALIDATOR_RECORD_COUNT "VALIDATOR_RECORD_COUNT",
	b.COMPANY_CODE "COMPANY_CODE"

FROM SPFB_SP2_FILE_SYS_MD a LEFT JOIN SPFB_BCP_SP2_FILE_SYS_PRODUCTS_MD b ON a.ID_FILESET = b.ID_FILESET LEFT JOIN SPFB_FILES_SYS_MD c ON a.ID_FILESET = c.ID_FILESET;

COMMIT;
